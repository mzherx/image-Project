.input {
  --icon-size: 32px;
  position: relative;
  margin-top: 20px;
}

.input svg {
  position: absolute;
  width: var(--icon-size);
  top: 50%;
  left: 1rem;
  translate: 0 -50%;
  overflow: visible;
  color: color-mix(in lch, canvas, canvasText 30%);
}

.input svg path {
  transform-box: fill-box;
  transform-origin: center;
}

.input:is(:hover, :focus-within) .svg path {
  animation: pop 0.5s var(--d);
}

.input svg path:nth-of-type(1) {
  --d: 0.24s;
  --r: 20deg;
  --s: 1.5;
}
.input svg path:nth-of-type(2) {
  --d: 0.12s;
  --r: 10deg;
  --s: 1.4;
}
.input svg path:nth-of-type(3) {
  --d: 0s;
  --r: 0deg;
  --s: 1.25;
}

@keyframes pop {
  50% {
    scale: var(--s, 1);
    rotate: var(--r, 0deg);
  }
}

.search::placeholder {
  color: color-mix(in lch, canvas, canvasText 30%);
}

.search {
  box-shadow:
    0 20px 25px -5px rgb(0 0 0 / 0.15),
    0 8px 10px -6px rgb(0 0 0 / 0.25);
  font-family: inherit;
  min-width: 600px;
  padding: 1rem 1rem 1rem calc(1rem + var(--icon-size) + 0.5rem);
  font-size: 1.025rem;
  field-sizing: content;
  background:
    linear-gradient(canvas, canvas) padding-box,
    linear-gradient(120deg, hsl(278, 44%, 73%), hsl(35, 81%, 73%)) border-box;
  border: 4px solid transparent;
  border-radius: 12px;
  outline: none;
  /*   background-clip: padding-box, border-box; */
}

.bear-link {
  color: canvasText;
  position: fixed;
  top: 1rem;
  left: 1rem;
  width: 48px;
  aspect-ratio: 1;
  display: grid;
  place-items: center;
  opacity: 0.8;
}

:where(.x-link, .bear-link):is(:hover, :focus-visible) {
  opacity: 1;
}

.bear-link .svg {
  width: 75%;
}
